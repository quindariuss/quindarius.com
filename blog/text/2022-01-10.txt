Mon Jan 10 18:38:52 EST 2022
--------------------------------------------------------------------------------
Sitting in my Senior Project class. 
The guy is really tossing around his age.
He talked about being literally older than the internet, yikes.
Says that Elon Musk is doing agile methods in hardware.

The interview went well, the work I did prior, making my website article pages with the places that I worked for.
I have an upcoming technical interview this Friday at 1600H.
I will be walking through an iOS project that I have created.
I think I will be using the Match my Mechanic Code for the project to walk through.
This will be one of my first live code walk through with other developers. 

For my Senior Project Class my professor said that he can't make it work for how some teams get to do presentations early vs, others being able to do it late.
I won't tell him because this is too simple figure out with just a bit of logic.
3 Groups, 3 Presentations.
ABCABC
 ABCABC
  ABCABC

ABC
123
CAB
123
BCA
123

ABC
CAB
BCA

A = 1 + 2 + 3 = 6 
B = 2 + 3 + 1 = 6
C = 3 + 1 + 2 = 6

Interview Preparation 
--------------------------------------------------------------------------------
Combine
    - It starts with the publisher 
    +--> Subscribe with the sink 
    +--> Can give an error once unless set to Any Cancellable
    +--> Being able to transform publishers before they get their subscribers.
    +--> Reminds a lot like middleware within API's, express mainly.
    - The best case that I see Combine is in networking. 
      It simplifies the code significantly and avoids the main queue.
      Really good for asynchronous programming 
Core Data
    - NSPersistentContainer class
    +--> Model
    +--> Managed Object Context
    +--> Persistent Store Coordinator
       +--> Underlying storage(SQLite)
          +--> SQLite
               Best for large data within the application
          +--> Memory
          +--> Binary
    - Create a data model 
    - Define the entities 
    - Create extension to the wrapper class you have for your NSPersistent Container
    - You can use most of the entities by name if everything is properly linked in the Manage Object Context which it should be since the loading of it is automatic from the creation and editing of the data model. 
    - use the viewContext.save() to get all of the data that you want saved.

URLSessions
    - Each Instance is like a headless browser window.
    - Send and receive data 
    - TCP and TLS using the websocket protocol
    - Works amazing combined with combine.

Lavendale
   - Requirements Document
   > https://www.notion.so/lavendalehealthcare/Software-Requirement-Document-2dfc0c94a5254015a22b816580a8bd88

